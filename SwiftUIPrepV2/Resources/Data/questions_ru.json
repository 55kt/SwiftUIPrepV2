{
  "categories": [
    {
      "id": "uuid-1",
      "name": "Основы Swift",
      "iconName": "swift-icon",
      "priority": "mandatory",
      "questions": [
        {
          "id": "uuid-1-1",
          "question": "Что такое опционалы в Swift и почему они важны?",
          "correctAnswer": "Тип, который может содержать либо значение, либо nil.",
          "incorrectAnswers": [
            "Тип, который может содержать только значение.",
            "Тип, который может содержать только nil.",
            "Тип, который не может содержать никакого значения."
          ],
          "questionDescription": "Этот вопрос проверяет ваше понимание опционалов в Swift, которые позволяют переменным иметь значение или быть nil.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "swift-icon"
        },
        {
          "id": "uuid-1-2",
          "question": "В чём разница между `let` и `var` в Swift?",
          "correctAnswer": "`let` используется для констант, `var` — для переменных.",
          "incorrectAnswers": [
            "`let` используется для переменных, `var` — для констант.",
            "Между ними нет разницы.",
            "`let` и `var` взаимозаменяемы."
          ],
          "questionDescription": "Этот вопрос проверяет ваши знания о декларации переменных в Swift, с акцентом на иммутабельность.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "swift-icon"
        },
        {
          "id": "uuid-1-3",
          "question": "Что такое замыкание (closure) в Swift?",
          "correctAnswer": "Самодостаточный блок функциональности, который можно передавать.",
          "incorrectAnswers": [
            "Тип переменной.",
            "Протокол для сетевых операций.",
            "Метод управления памятью."
          ],
          "questionDescription": "Этот вопрос проверяет ваше понимание замыканий, которые широко используются в Swift для функционального программирования.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "swift-icon"
        },
        {
          "id": "uuid-1-4",
          "question": "Что такое вывод типов (type inference) в Swift?",
          "correctAnswer": "Способность компилятора автоматически определять тип переменной.",
          "incorrectAnswers": [
            "Способ определения новых типов.",
            "Метод управления памятью.",
            "Протокол для обеспечения типовой безопасности."
          ],
          "questionDescription": "Этот вопрос проверяет ваше понимание вывода типов, ключевой особенности Swift, которая уменьшает необходимость явного объявления типов.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "swift-icon"
        },
        {
          "id": "uuid-1-5",
          "question": "Что делает оператор `guard` в Swift?",
          "correctAnswer": "Он проверяет условие, и если оно не выполняется, выходит из области видимости.",
          "incorrectAnswers": [
            "Он выполняет цикл по коллекции.",
            "Он определяет новую функцию.",
            "Он создаёт новую переменную."
          ],
          "questionDescription": "Этот вопрос проверяет ваши знания об операторе `guard`, который используется для раннего выхода в Swift.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "swift-icon"
        }
      ]
    },
    {
      "id": "uuid-2",
      "name": "Основы SwiftUI",
      "iconName": "ui-icon",
      "priority": "optional",
      "questions": [
        {
          "id": "uuid-2-1",
          "question": "Какова цель обёртки свойства `@State` в SwiftUI?",
          "correctAnswer": "Управление изменяемым состоянием в представлении.",
          "incorrectAnswers": [
            "Создание статического представления.",
            "Обработка сетевых запросов.",
            "Определение постоянного значения."
          ],
          "questionDescription": "Этот вопрос проверяет ваше понимание управления состоянием в SwiftUI с помощью @State.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "ui-icon"
        },
        {
          "id": "uuid-2-2",
          "question": "Что делает компонент `VStack` в SwiftUI?",
          "correctAnswer": "Располагает представления вертикально.",
          "incorrectAnswers": [
            "Располагает представления горизонтально.",
            "Создаёт сетку.",
            "Управляет навигацией."
          ],
          "questionDescription": "Этот вопрос проверяет ваше понимание компонентов макета SwiftUI, в частности VStack.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "ui-icon"
        },
        {
          "id": "uuid-2-3",
          "question": "Как осуществляется навигация между представлениями в SwiftUI?",
          "correctAnswer": "С помощью NavigationLink.",
          "incorrectAnswers": [
            "С помощью VStack.",
            "С помощью Button.",
            "С помощью TextField."
          ],
          "questionDescription": "Этот вопрос проверяет ваши знания о навигации в SwiftUI с помощью NavigationLink.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "ui-icon"
        },
        {
          "id": "uuid-2-4",
          "question": "Какова роль модификатора `onAppear` в SwiftUI?",
          "correctAnswer": "Он выполняет код, когда представление появляется.",
          "incorrectAnswers": [
            "Он выполняет код, когда представление исчезает.",
            "Он обрабатывает пользовательский ввод.",
            "Он управляет изменениями состояния."
          ],
          "questionDescription": "Этот вопрос проверяет ваше понимание событий жизненного цикла в SwiftUI с помощью onAppear.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "ui-icon"
        },
        {
          "id": "uuid-2-5",
          "question": "Что делает обёртка свойства `@Binding` в SwiftUI?",
          "correctAnswer": "Она создаёт двустороннюю связь между родительским и дочерним представлением.",
          "incorrectAnswers": [
            "Она определяет постоянное значение.",
            "Она управляет анимациями представлений.",
            "Она обрабатывает сетевые запросы."
          ],
          "questionDescription": "Этот вопрос проверяет ваше понимание связывания данных в SwiftUI с помощью @Binding.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "ui-icon"
        }
      ]
    },
    {
      "id": "uuid-3",
      "name": "Разработка для iOS",
      "iconName": "ios-icon",
      "priority": "optional",
      "questions": [
        {
          "id": "uuid-3-1",
          "question": "Какой основной язык используется для разработки приложений для iOS?",
          "correctAnswer": "Swift.",
          "incorrectAnswers": [
            "Java.",
            "Python.",
            "C++."
          ],
          "questionDescription": "Этот вопрос проверяет ваши знания о основном языке программирования для разработки iOS.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "ios-icon"
        },
        {
          "id": "uuid-3-2",
          "question": "Какой фреймворк используется для создания пользовательских интерфейсов в iOS?",
          "correctAnswer": "SwiftUI или UIKit.",
          "incorrectAnswers": [
            "CoreData.",
            "Alamofire.",
            "CoreMotion."
          ],
          "questionDescription": "Этот вопрос проверяет ваше понимание фреймворков UI в разработке для iOS.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "ios-icon"
        },
        {
          "id": "uuid-3-3",
          "question": "Какова цель Auto Layout в iOS?",
          "correctAnswer": "Создание адаптивных макетов для разных размеров экрана.",
          "incorrectAnswers": [
            "Управление навигацией приложения.",
            "Обработка сетевых запросов.",
            "Хранение пользовательских данных."
          ],
          "questionDescription": "Этот вопрос проверяет ваше понимание Auto Layout для создания адаптивного UI в iOS.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "ios-icon"
        },
        {
          "id": "uuid-3-4",
          "question": "Какова роль AppDelegate в приложении iOS?",
          "correctAnswer": "Он управляет событиями жизненного цикла приложения.",
          "incorrectAnswers": [
            "Он управляет макетами пользовательского интерфейса.",
            "Он выполняет сетевые запросы.",
            "Он хранит пользовательские данные."
          ],
          "questionDescription": "Этот вопрос проверяет ваше понимание роли AppDelegate в управлении событиями жизненного цикла приложения.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "ios-icon"
        },
        {
          "id": "uuid-3-5",
          "question": "Какова цель `UIViewController` в iOS?",
          "correctAnswer": "Он управляет представлением и его жизненным циклом.",
          "incorrectAnswers": [
            "Он выполняет операции с базой данных.",
            "Он управляет сетевыми запросами.",
            "Он определяет темы приложения."
          ],
          "questionDescription": "Этот вопрос проверяет ваше понимание роли UIViewController в разработке для iOS.",
          "isFavorite": false,
          "isAnswered": false,
          "isAnsweredCorrectly": null,
          "iconName": "ios-icon"
        }
      ]
    }
  ]
}
